name: NanoPi R2S OpenWrt

on:
  watch:
    types: started
  
  repository_dispatch:
  workflow_dispatch:    
  #schedule: 
    #- cron: '10 23 * * *' 
env:
  SCKEY: ${{ secrets.SCKEY }}

jobs:
  OpenWrt-18_06:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
        sudo -E apt-get clean -y
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
    - name: Clone Source
      run: |
        cd "/home/runner"
        git clone --branch "openwrt-18.06-k5.4" --single-branch "https://github.com/immortalwrt/immortalwrt.git" "openwrt"
        sudo chown -R runner:runner "openwrt"
        cd "/home/runner/openwrt"
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        #patch -p1 < "${GITHUB_WORKSPACE}/patches/1806-modify_for_r2s.patch"
        #patch
        sed -i "s/option hw_flow '1'/option hw_flow '0'/" package/feeds/luci/luci-app-turboacc/root/etc/config/turboacc
        sed -i "s/option sfe_flow '1'/option sfe_flow '0'/" package/feeds/luci/luci-app-turboacc/root/etc/config/turboacc
        sed -i "s/option sfe_bridge '1'/option sfe_bridge '0'/" package/feeds/luci/luci-app-turboacc/root/etc/config/turboacc
        sed -i "/dep.*INCLUDE_.*=n/d" package/feeds/luci/luci-app-turboacc/Makefile

        find . -type f -name nft-qos.config | xargs sed -i "s/option limit_enable '1'/option limit_enable '0'/"
        sed -i "/\/etc\/coremark\.sh/d" package/feeds/packages/coremark/coremark
        sed -i 's/192.168.1.1/192.168.2.1/' package/base-files/files/bin/config_generate
        sed -i 's/=1/=0/g' package/kernel/linux/files/sysctl-br-netfilter.conf

        sed -i '/DEPENDS/ s/$/ +libcap-bin/' `find . -type f -path '*/luci-app-openclash/Makefile'`
        sed -i '/DEPENDS+/ s/$/ +wsdd2/' `find . -type f -path '*/ksmbd-tools/Makefile'`
        
        sed -i "s/enable '0'/enable '1'/" `find feeds/ -type f -name oled | grep config`
        sed -i 's/1400000/1450000/' target/linux/rockchip/patches-5.4/991-arm64-dts-rockchip-add-more-cpu-operating-points-for.patch
        truncate -s-1 package/feeds/luci/luci-app-cpufreq/root/etc/config/cpufreq
        echo -e "\toption governor0 'schedutil'" >> package/feeds/luci/luci-app-cpufreq/root/etc/config/cpufreq
        echo -e "\toption minfreq0 '816000'" >> package/feeds/luci/luci-app-cpufreq/root/etc/config/cpufreq
        echo -e "\toption maxfreq0 '1512000'\n" >> package/feeds/luci/luci-app-cpufreq/root/etc/config/cpufreq
        
        wget https://github.com/coolsnowwolf/lede/raw/757e42d70727fe6b937bb31794a9ad4f5ce98081/target/linux/rockchip/config-default -NP target/linux/rockchip/
        wget https://github.com/coolsnowwolf/lede/commit/f341ef96fe4b509a728ba1281281da96bac23673.patch
        git apply f341ef96fe4b509a728ba1281281da96bac23673.patch
        rm f341ef96fe4b509a728ba1281281da96bac23673.patch
        
        sed -i '/182.140.223.146/d' scripts/download.pl
        sed -i '/\.cn\//d' scripts/download.pl
        sed -i '/tencent/d' scripts/download.pl
        
        #SWAP LAN WAN 满足千兆场景
        sed -i 's,"eth1" "eth0","eth0" "eth1",g' target/linux/rockchip/armv8/base-files/etc/board.d/02_network
        sed -i "s,'eth1' 'eth0','eth0' 'eth1',g" target/linux/rockchip/armv8/base-files/etc/board.d/02_network
        #Change to 5.10
        #sed -i 's/KERNEL_PATCHVER=5.4/KERNEL_PATCHVER=5.10/g' target/linux/rockchip/Makefile
        #jd-dailybonus 更新
        git clone --depth 1 https://github.com/jerrykuku/node-request.git package/new/node-request
        svn co -r131 https://github.com/jerrykuku/luci-app-jd-dailybonus/trunk package/new/luci-app-jd-dailybonus
        pushd package/new/luci-app-jd-dailybonus
        sed -i 's/wget-ssl/wget/g' root/usr/share/jd-dailybonus/newapp.sh luasrc/controller/jd-dailybonus.lua
        popd
        rm -rf ./package/new/luci-app-jd-dailybonus/root/usr/share/jd-dailybonus/JD_DailyBonus.js
        wget -P package/new/luci-app-jd-dailybonus/root/usr/share/jd-dailybonus/ https://github.com/NobyDa/Script/raw/master/JD-DailyBonus/JD_DailyBonus.js

    - name: Send notification via bark
      run: |
        curl https://bark.19931026.xyz/LFy9GgPFENRCkzHFJBFuE7//immoralWrt固件编译通知/r2s_18.06固件编译开始！
        
    - name: Build OpenWrt-18.06
      run: |
        cd "/home/runner/openwrt"
        cp -f "${GITHUB_WORKSPACE}/configs/1806-config.seed" ".config"
        make defconfig
        make -j$[$(nproc)+1]
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz"

    - name: Rebuild OpenWrt-18.06 to Collect Error Log
      if: failure()
      run: |
        cd "/home/runner/openwrt"
        make V=99
        mv -f "bin/targets/rockchip/armv8/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz" "../openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz"
    - name: Upload OpenWrt-Snapshot EXT4 Firmware
      uses: actions/upload-artifact@v2
      with:
        name: openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz
        path: /home/runner/openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz
        
    - name: Send notification via bark
      run: |
        curl http://hk.19931026.xyz:8080/gujjwxzxlfqxsldw/immoralWrt固件编译通知/r2s_18.06固件编译结束！
        
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        cp /home/runner/openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz ./artifact/
        zip -r artifact.zip ./artifact/
        release_tag="Terry-$(date +%Y-%m-%d)"
        echo "##[set-output name=release_tag;]$release_tag"
    
    - name: Upload Release Asset
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.workflow_token }}
        file: ./artifact/openwrt-18.06-rockchip-armv8-friendlyarm_nanopi-r2s-ext4-sysupgrade.img.gz
        tag: ${{ steps.assemble_artifact.outputs.release_tag }}
        file_glob: true
        overwrite: true
        release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}

    - name: Send notification via bark
      if: failure()
      run: |
        curl https://bark.19931026.xyz/LFy9GgPFENRCkzHFJBFuE7//immoralWrt固件编译通知/r2s_18.06固件编译出错啦！
      
    - name: Send bark notification
      run: |
        curl https://bark.19931026.xyz/LFy9GgPFENRCkzHFJBFuE7//immoralWrt固件编译通知/r2s_18.06固件编译通过！   
  
  Cleanup-Old-Artifacts:
    needs: [OpenWrt-18_06]
    runs-on: ubuntu-18.04
    steps:
    - name: Cleanup Old Action Artifacts
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ github.token }}
        expire-in: 7d
  Cleanup-Workflow-Runs:
    needs: Cleanup-Old-Artifacts
    runs-on: ubuntu-18.04
    steps:
      - name: Cleanup Workflow Runs
        uses: GitRML/delete-workflow-runs@v1.2.1
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 7
